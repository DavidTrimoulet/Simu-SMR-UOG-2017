
from morse.builder import *
from math import pi
from Simu_SMR_UOG_2017.builder.robots.CESIBot import CESIBot


robot1 = CESIBot()
robot1Waypoint = Waypoint()
robot1Waypoint.add_stream('socket')
robot1Pose = Pose()
robot1Pose.add_stream('socket')
robot1SemanticC = SemanticCamera()
robot1SemanticC.translate(x=0.3, z=-0.05)
robot1SemanticC.rotate(x=+0.2)
robot1SemanticC.properties(Vertical_Flip=True)
robot1.translate(x=1, y=1,z=0)
robot1.append(robot1Waypoint)
robot1.append(robot1Pose)
robot1.append(robot1SemanticC)

robot2 = CESIBot()
robot2Waypoint = Waypoint()
robot2Waypoint.add_stream('socket')
robot2Pose = Pose()
robot2Pose.add_stream('socket')
robot2SemanticC = SemanticCamera()
robot2SemanticC.translate(x=0.3, z=-0.05)
robot2SemanticC.rotate(x=+0.2)
robot2SemanticC.properties(Vertical_Flip=True)
robot2.translate(x=2, y=2,z=0)
robot2.append(robot2Waypoint)
robot2.append(robot2Pose)
robot2.append(robot2SemanticC)

robot3 = CESIBot()
robot3Waypoint = Waypoint()
robot3Waypoint.add_stream('socket')
robot3Pose = Pose()
robot3Pose.add_stream('socket')
robot3SemanticC = SemanticCamera()
robot3SemanticC.translate(x=0.3, z=-0.05)
robot3SemanticC.rotate(x=+0.2)
robot3SemanticC.properties(Vertical_Flip=True)
robot3.translate(x=3, y=3,z=0)
robot3.append(robot3Waypoint)
robot3.append(robot3Pose)
robot3.append(robot3SemanticC)

robot4 = CESIBot()
robot4Waypoint = Waypoint()
robot4Waypoint.add_stream('socket')
robot4Pose = Pose()
robot4Pose.add_stream('socket')
robot4SemanticC = SemanticCamera()
robot4SemanticC.translate(x=0.3, z=-0.05)
robot4SemanticC.rotate(x=+0.2)
robot4SemanticC.properties(Vertical_Flip=True)
robot4.translate(x=4, y=4,z=0)
robot4.append(robot4Waypoint)
robot4.append(robot4Pose)
robot4.append(robot4SemanticC)

robot1.add_service('socket')
robot2.add_service('socket')
robot3.add_service('socket')
robot4.add_service('socket')

#	myrobots.append(robot)

env = Environment('/home/cesi/Simu_SMR_UOG_2017/Models/Models.blend')
env.set_camera_location([0.0, 0.0, 20.0])
env.set_camera_rotation([45, 0, 0])
env.select_display_camera(robot4SemanticC)
#env.select_display_camera()

